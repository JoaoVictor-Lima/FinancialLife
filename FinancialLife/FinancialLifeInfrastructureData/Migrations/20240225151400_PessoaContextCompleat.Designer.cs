// <auto-generated />
using System;
using FinancialLifeInfrastructureData.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinancialLifeInfrastructureData.Migrations
{
    [DbContext(typeof(FinancialLifeDbContext))]
    [Migration("20240225151400_PessoaContextCompleat")]
    partial class PessoaContextCompleat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Cidade", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("IdPais");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar")
                        .HasColumnName("Uf");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Estado", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.ToTable("Pais", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.EmailPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar")
                        .HasColumnName("Email");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("IdPessoa");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoa");

                    b.ToTable("EmailPessoa", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.EnderecoPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Bairro");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar")
                        .HasColumnName("Complemento");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int")
                        .HasColumnName("IdCidade");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    b.Property<int>("IdPais")
                        .HasColumnType("int")
                        .HasColumnName("IdPais");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("IdPessoa");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Logradouro");

                    b.Property<int>("Numero")
                        .HasColumnType("int")
                        .HasColumnName("Numero");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdPais");

                    b.HasIndex("IdPessoa");

                    b.ToTable("EnderecoPessoa", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.GeneroPessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar")
                        .HasColumnName("Descricao");

                    b.HasKey("Id");

                    b.ToTable("GeneroPessoa", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Pessoa");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.TelefonePessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ddd")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("varchar")
                        .HasColumnName("Ddd");

                    b.Property<int>("IdPessoa")
                        .HasColumnType("int")
                        .HasColumnName("IdPessoa");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("varchar")
                        .HasColumnName("Numero");

                    b.HasKey("Id");

                    b.HasIndex("IdPessoa");

                    b.ToTable("TelefonePessoa", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaFisica", b =>
                {
                    b.HasBaseType("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("varchar")
                        .HasColumnName("Cpf");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("date")
                        .HasColumnName("DataNascimento");

                    b.Property<int>("IdGeneroPessoa")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("Nome");

                    b.HasIndex("IdGeneroPessoa")
                        .IsUnique()
                        .HasFilter("[IdGeneroPessoa] IS NOT NULL");

                    b.ToTable("PessoaFisica", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaJuridica", b =>
                {
                    b.HasBaseType("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa");

                    b.Property<string>("RazaoSocial")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar")
                        .HasColumnName("RazaoSocial");

                    b.ToTable("PessoaJuridica", (string)null);
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Cidade", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Localizacao.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Estado", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Localizacao.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.EmailPessoa", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.EnderecoPessoa", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Localizacao.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Localizacao.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Localizacao.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Estado");

                    b.Navigation("Pais");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.TelefonePessoa", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("IdPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaFisica", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaFisica", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Pessoas.GeneroPessoa", "GeneroPessoa")
                        .WithOne()
                        .HasForeignKey("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaFisica", "IdGeneroPessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GeneroPessoa");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaJuridica", b =>
                {
                    b.HasOne("FinancialLifeDomain.Entities.Nucleo.Pessoas.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("FinancialLifeDomain.Entities.Nucleo.Pessoas.PessoaJuridica", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("FinancialLifeDomain.Entities.Nucleo.Localizacao.Pais", b =>
                {
                    b.Navigation("Estados");
                });
#pragma warning restore 612, 618
        }
    }
}
